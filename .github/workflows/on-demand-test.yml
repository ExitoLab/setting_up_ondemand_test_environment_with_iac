name: QA On-Demand Environment

on:
  push:
    branches:
      - 'feature/**'
      - 'main'
  pull_request:
    types: [closed]

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      PROJECT: qa-aci
      BRANCH_NAME: ${{ github.ref_name }}
      PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_REPO: ${{ secrets.DOCKER_REPO }} # e.g., your-dockerhub-username/qa-app

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Sanitize branch name
        run: echo "SANITIZED_BRANCH_NAME=${BRANCH_NAME//\//-}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin

      - name: Build and push Docker image
        run: |
          IMAGE_TAG=${DOCKER_REPO}:${SANITIZED_BRANCH_NAME}
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          docker build -t $IMAGE_TAG ./application
          docker push $IMAGE_TAG

      - name: Install Pulumi CLI
        uses: pulumi/actions@v4

      - name: Install dependencies
        run: pip install pulumi pulumi-azure-native

      - name: Pulumi login
        run: pulumi login --local

      - name: Detect Pulumi org
        id: pulumi_org
        run: echo "ORG=$(pulumi whoami --show-org)" >> $GITHUB_ENV

      - name: Pulumi stack select/create
        working-directory: infrastructure
        run: |
          STACK="$ORG/$PROJECT/$SANITIZED_BRANCH_NAME"
          pulumi stack select "$STACK" || pulumi stack init "$STACK"

      - name: Apply Pulumi.dev.yaml config to stack
        working-directory: infrastructure
        run: cp Pulumi.dev.yaml Pulumi."$SANITIZED_BRANCH_NAME".yaml

      - name: Update stack config with Docker image
        working-directory: infrastructure
        run: pulumi config set docker:image $IMAGE_TAG --stack $ORG/$PROJECT/$SANITIZED_BRANCH_NAME

      - name: Wait for Pulumi output (app_fqdn)
        working-directory: infrastructure
        id: pulumi_output
        run: |
          for i in {1..10}; do
            APP_FQDN=$(pulumi stack output app_fqdn)
            if [ "$APP_FQDN" != "" ] && [ "$APP_FQDN" != "not-assigned" ]; then
              echo "APP_FQDN=$APP_FQDN" >> $GITHUB_ENV
              break
            fi
            echo "Waiting for app_fqdn..."
            sleep 15
          done

      - name: Run QA tests
        run: |
          echo "Testing against http://$APP_FQDN"
          pip install requests
          python application/test.py http://$APP_FQDN
        env:
          APP_FQDN: ${{ env.APP_FQDN }}
