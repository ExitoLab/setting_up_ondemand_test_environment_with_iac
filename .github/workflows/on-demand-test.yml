name: QA On-Demand Environment

on:
  push:
    branches:
      - 'feature/**'
      - 'main'
  pull_request:
    types: [closed]

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      PROJECT: qa-aci
      BRANCH_NAME: ${{ github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # - name: Build & Push Docker image
      #   run: |
      #     docker build -t yourdockerhubusername/flask-app:${BRANCH_NAME} .
      #     echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      #     docker push yourdockerhubusername/flask-app:${BRANCH_NAME}

      - name: Install Pulumi CLI
        uses: pulumi/actions@v4

      - name: Install dependencies
        run: pip install pulumi pulumi-azure-native

      - name: Azure Login
        uses: azure/login@v2.3.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Pulumi login
        run: pulumi login --local

      - name: Sanitize branch name
        run: echo "SANITIZED_BRANCH_NAME=${BRANCH_NAME//\//-}" >> $GITHUB_ENV

      - name: Detect Pulumi org
        id: pulumi_org
        run: echo "ORG=$(pulumi whoami --show-org)" >> $GITHUB_ENV

      - name: Pulumi stack select/create
        run: |
          STACK="$ORG/$PROJECT/$SANITIZED_BRANCH_NAME"
          pulumi stack select "$STACK" || pulumi stack init "$STACK"

      - name: Apply Pulumi.dev.yaml config to stack
        run: |
          STACK="$ORG/$PROJECT/$SANITIZED_BRANCH_NAME"
          cp Pulumi.dev.yaml Pulumi."$SANITIZED_BRANCH_NAME".yaml

      - name: Pulumi preview
        run: pulumi preview
